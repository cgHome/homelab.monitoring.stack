version: "3.9"

volumes:
  grafana-volume: {}
  influxdb-volume: {}

networks:
  monitoring:

x-healthcheck: &default-healthcheck
  test: [ "CMD", "echo", "true"]
  interval: 10s
  timeout: 60s
  retries: 5
  start_period: 20s

services:
  telegraf:
    image: telegraf:${TELEGRAF_VERSION}
    container_name: telegraf
    # command: --test --test-wait=10
    user: telegraf:0  # see: https://www.influxdata.com/blog/docker-run-telegraf-as-non-root/
    environment:
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
      - INFLUXDB_ADMIN_TOKEN
      # Plugins - Docker_Host
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf:/etc/telegraf:ro
      - /:/hostfs:ro
    ports:
      - 8125:8125
      # Plugins
      - 514:6514/udp   # syslog (RFC3164)
      - 601:6601/tcp   # syslog (RFC5424)
      - 601:6601/udp   
    networks:
      - monitoring
    healthcheck:
      <<: *default-healthcheck
      # test: ["CMD", "curl", "-f", "http://telegraf:8125/ping"] >>> ??
    depends_on:
      - influxdb
    restart: always

  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    container_name: influxdb
    command: --log-level debug
    environment:      
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${STACK_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${STACK_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - influxdb-volume:/etc/influxdb2
      - influxdb-volume:/var/lib/influxdb2
    ports:
      - 8086:8086
    networks:
      - monitoring
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "curl", "-f", "http://influxdb:8086/ping"]
    # depends_on:
    #   - grafana
    restart: on-failure:10

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_DEFAULT_INSTANCE_NAME=${INFLUXDB_ORG}
      # - GF_INSTALL_PLUGINS="list of plugins seperated by ,"
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_ENABLE_GZIP=true
      # datasources
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
      - INFLUXDB_ADMIN_TOKEN
    volumes:
      - grafana-volume:/var/lib/grafana:rw
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/etc/dashboards:ro
    ports:
      - 3000:3000
    networks:
      - monitoring
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://grafana:3000/api/health | grep ok"]
    restart: always
